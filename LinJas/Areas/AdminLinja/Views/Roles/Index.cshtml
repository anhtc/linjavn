@using LinJas.Areas.AdminLinja.Models.AuthModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/AdminLinja/Views/Shared/_Layouts.cshtml";
}

<h2 class="text-title">Cập nhật Phân quyền</h2>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-9">
            <div id="clientsDb">
                @(Html.Kendo().Grid<AspController>()
          .Name("grdController")
          .Columns(columns =>
          {
              columns.Bound(c => c.Controller).Sortable(false).Title("Controller");
              columns.Bound(c => c.Action).Title("Action");
              columns.Bound(c => c.Area).Sortable(false).Title("Area");
              columns.Bound(c => c.Description).Sortable(false).Title("Mô tả");
              columns.Bound(c => c.TrangThai).Sortable(true).Title("Trạng thái");
              columns.Bound(c => c.Action).Sortable(false).Title("").ClientTemplate("<a onclick='showWindowEditMota(\"#=Controller#\",\"#=Action#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
          })
          .ToolBar(toolbar =>
          {
              toolbar.Template(
                @<text>
                    <div class="toolbar">
                        <table style="width:100%">
                            <tr>
                                <td width="25%" align="left">
                                    <button type="button" id="btnPhanQuyen" class="k-button"><span class="k-icon k-i-plus"></span>Cập nhật phân quyền</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                </text>);
          })
        .Pageable()
        .Sortable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("LoadData", "Roles")))
                )
            </div>
        </div>
        <div class="col-md-3">
            @(Html.Kendo().Grid<AspNetRole>()
          .Name("grdRole")
          .Columns(columns =>
          {
              columns.Bound(c => c.Id).Sortable(false).Title("Mã");
              columns.Bound(c => c.RoleName).Title("Quyền");
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='updateItemGridRole(\"#=Id#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='removeItemGrid(\"#=Id#\")' ><span class='glyphicon glyphicon-trash'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
          })
          .ToolBar(toolbar =>
          {
              toolbar.Template(
                @<text>
                    <div class="toolbar">
                        <table style="width:100%">
                            <tr>
                                <td>
                                    <button type="button" id="btnCreateRoleId" onclick="showAdd()" class="k-button"><span class="k-icon k-i-plus"></span>Tạo Quyền</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                </text>);
          })
        .Pageable()
        .Sortable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("GetAllRole", "Roles")))
            )
        </div>
    </div>
    <!--Người dùng-->
    <div class="row">
        <div class="col-md-12 heading">
            <h2 class="text-title">Danh sách người dùng</h2>
        </div>
        <div class="col-md-12 ">           
            <div id="clientsDb">
                @(Html.Kendo().Grid<NguoiDungModel>()
          .Name("grdUser")
          .Columns(columns =>
          {
              columns.Bound(c => c.Id).Sortable(false).Title("Id");
              columns.Bound(c => c.Hoten).Title("Tên người dùng");
              columns.Bound(c => c.UrlAnh).Title("Ảnh đại diện").Width(50).ClientTemplate("<img src='" + @Url.Content("#=UrlAnh#") + "' height='30px' width='30px'/>"); ;
              columns.Bound(c => c.Email).Sortable(false).Title("Email");
              columns.Bound(c => c.Phone).Sortable(false).Title("Phone");
              columns.Bound(c => c.UserName).Sortable(true).Title("Tên tài khoản");
              columns.Bound(c => c.PasswordHash).Sortable(false).Title("Mật khẩu");
              columns.Bound(c => c.RoleName).Sortable(false).Title("Quyền");
              columns.Bound(c => c.Activeted).Sortable(false).Title("Trạng thái").ClientTemplate("<div style=\"text-align:center;\">#=Activeted#</div>").Width(30);
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='updateItemGridUser(\"#=Id#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='removeItemGridUser(\"#=Id#\")' ><span class='glyphicon glyphicon-trash'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
          })
          .ToolBar(toolbar =>
          {
          toolbar.Template(
                @<text>
                    <div class="toolbar">
                        <table style="width:100%">
                            <tr>
                                <td width="25%" align="left">
                                    <button type="button" id="btnAddUser" class="k-button"><span class="k-icon k-i-plus"></span>Thêm Người dùng</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                </text>);
          })
        .Pageable()
        .Sortable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .Events(events => events.Change("onChange").DataBound("onDataBound").DataBinding("onDataBinding"))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("LoadDataNguoiDung", "Roles")))
                )
            </div>
        </div>       
    </div>
    <!--Phân quyền-->
    <div class="row">
        <div class="col-md-12 heading">
            <h2 class="text-title">Phân Quyền cho quản trị viên</h2>
        </div>
        <div class="col-md-6">
            <div id="clientsDb">
                @(Html.Kendo().Grid<NhomQuyenModel>()
                .Name("grdQuyen")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Controller).Sortable(false).Title("Controller");
                })
            .Pageable()
            .Sortable()
            .Selectable(select => select
            .Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
            .Events(events => events.Change("onChangeAction").DataBound("onDataBoundAction").DataBinding("onDataBindingAction"))
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Read(read => read.Action("AddController", "Roles")))
                )
            </div>
        </div>
        <div class="col-md-6">
            <div id="clientsDb">
                @(Html.Kendo().Grid<CheckQuyenModel>()
        .Name("grdAction")
          .Columns(columns =>
          {
              columns.Bound(c => c.Action).HeaderTemplate("<span class='k-link'><input id='mastercheckbox' name='all' type='checkbox'/></span>")
              .ClientTemplate("<input name='checkedRecords' type='checkbox' value='#=Action#' id='checkboxGroups_#=Action#' #=isBranchFormat# />")
              .Sortable(false).Width(20);
              columns.Bound(c => c.Controller).Title("Controller");
              columns.Bound(c => c.Action).Title("Action");
              columns.Bound(c => c.Mota).Title("Mô tả");
          })
           .ToolBar(toolbar =>
           {
           toolbar.Template(
            @<text>
                <div class="toolbar">
                    <button type="button" id="BtnCreate" onclick="UpdateQuyenBranch();" class="k-button"><span class="k-icon k-i-plus"></span>Cập Nhật Quyền</button>
                </div>
            </text>);
           })
        .Pageable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("GetAllActionByController", "Roles").Data("filterActionParams"))
        .ServerOperation(true)
        ))
            </div>
        </div>
    </div>  
    
</div>
<!--POPUP-->
@*Sửa mô tả cho quyền*@
<div id="window-AddMota">
    @(Html.Kendo().Window().Name("WindowAddMota")
                .Title("Quản lý danh sách các quyền")
                .Draggable()
                .Width(550)
                .Visible(false)
                .Modal(true)
                .Actions(actions => actions.Close())
                .Content(
    @<text>        
        <div>
            <table style="width: 100%;" border="0">
                <tr>
                    <td><label>Mô tả</label></td>
                </tr>
                <tr>
                    <td>
                        @Html.Hidden("txtControllers","")
                        @Html.Hidden("txtActions", "")
                        <input type="text" id="txtDescription" class='k-textbox' placeholder="Nhập mô tả cho quyền..." />
                    </td>
                </tr>
                <tr>
                    <td>
                        <hr />
                        <button type="button" id="BtnUpdateMota" class="k-button" onclick="UpdateMotaQuyen()"><span class="k-icon k-edit"></span> Sửa</button>
                    </td>
                </tr>
            </table>
        </div>
    </text>
    )
    )
</div>
@*Thêm mới Role*@
<div id="window-Add">
    @(Html.Kendo().Window().Name("WindowAddRoleId")
                .Title("Quản lý quyền")
                .Draggable()
                .Width(350)
                .Visible(false)
                .Modal(true)
                .Actions(actions => actions.Close())
                .Content(
    @<text>
        <div><span id="ErrorMessage"></span></div>
        <div>
            <table style="width: 100%;" border="0">
                <tr>
                    <td><label>Tên quyền</label></td>
                </tr>
                <tr>
                    <td>
                        <input type="text" id="txtRolesName" class='k-textbox' placeholder="Nhập tên quyền (user)..." />
                    </td>
                </tr>
                <tr>
                    <td>
                        <hr />
                        <button type="button" id="BtnAddNew" class="k-button" onclick="InsertRole()"><span class="k-icon k-edit"></span> Thêm mới</button>
                        <button type="button" id="BtnUpdate" class="k-button" onclick="UpdateRole()"><span class="k-icon k-edit"></span> Cập nhật</button>
                    </td>
                </tr>
            </table>
        </div>
    </text>
    )
    )
</div>
<!--Thêm mới người dùng-->
<div id="window-Adduser">
    @(Html.Kendo().Window().Name("WindowAddUserId")
                .Title("Quản lý người dùng")
                .Draggable()
                .Width(550)
                .Visible(false)
                .Modal(true)
                .Actions(actions => actions.Close())
                .Content(
    @<text>
        <div><span id="ErrorMessageUser"></span></div>
        <div style="padding: 5px;">
            <div>
                <table style="width: 100%;" border="0">
                    <tr>
                        <td>
                            @Html.Hidden("userId")
                            <label>Họ và tên *</label>
                            <input type="text" id="textName" name="textName" class='form-control k-textbox' placeholder="Họ và tên..." />
                        </td>
                    </tr>
                    <tr>
                        <td>                            
                            <label>Email *</label>
                            <input type="email" id="email" name="email" class='form-control k-textbox' placeholder="Email..." />
                        </td>
                    </tr>                    
                    <tr>
                        <td>
                            <label>Số điện thoại *</label>
                            <input type="tel" id="sodienthoai" name="sodienthoai" class='form-control k-textbox' placeholder="Phone..." />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Tài khoản *</label>
                            <input type="text" id="userName" name="userName" class='form-control k-textbox' placeholder="Tên tài khoản..." />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Mật khẩu *</label>
                            <input type="password" id="password" name="password" class='form-control k-textbox' placeholder="Password..." />
                        </td>
                    </tr>                   
                    <tr>
                        <td>
                            <div class="row">
                                <div class="col-md-5">
                                    <label>Chọn loại ủy quyền *</label>
                                    @(Html.Kendo().ComboBox()
                                      .Name("listRoles")
                                      .HtmlAttributes(new { style = "width:175px" })                                      
                                      .Filter(FilterType.Contains)
                                      .Placeholder("--- Chọn quyền ---")
                                      .DataTextField("RoleName")
                                      .DataValueField("Id")
                                      .AutoBind(false)
                                      .DataSource(source => { source.Read(read => { read.Action("GetQuyenByAll", "Roles"); }); })
                                      .Suggest(true)
                                    )
                                </div>
                                <div class="col-md-5">
                                    <label><input type="checkbox" id="ckActive" name="textActive" /><span> Kích hoạt</span></label>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Chọn ảnh đại diện *</label>
                            <div class="demo-section k-content">
                                <div style="position: relative;margin-top:5px;margin-bottom:10px; width:100px;">
                                    <img id="anhAvatar" src="~/Areas/AdminLinja/Content/images/NoImage.jpg" class="img-thumbnail img-responsive">
                                    <div style="position: absolute; bottom: 0; right: 0; margin: 0 5px 2px 0">
                                        <button id="xoaAnh" type="button" class="glyphicon glyphicon-remove"></button>
                                        <button id="themAnh" type="button" class="glyphicon glyphicon-file"></button>
                                        <input id="tepAnh" type="file" style="display:none;" />
                                    </div>
                                    
                                </div>
                            </div>
                        </td>
                    </tr>                  
                    <tr>
                        <td>
                            <hr />
                            <button type="button" id="BtnAddNewUser" class="k-button" onclick="InsertUser()"><span class="k-icon k-edit"></span> Thêm mới</button>
                            <button type="button" id="BtnUpdateUser" class="k-button" onclick="UpdateUser()"><span class="k-icon k-edit"></span> Cập nhật</button>
                        </td>
                    </tr>

                </table>
            </div>

        </div>
    </text>)
    )   
</div>
<!--END-->
<script>
    var controller = "Roles";
    var userId = "";
    function onChange(arg) {        
        var grid = $('#grdUser').data("kendoGrid");
        var selectedRow = grid.select();
        var selectedRowIndex = selectedRow.index();
        var data = grid.dataSource.data();
        userId = data[selectedRowIndex].Id;
        
        lienHeItemGrid(data[selectedRowIndex].Id);
    }
    function onDataBound(arg) {
        detailId = '';
        refreshGridQuyen();
    }

    function onDataBinding(arg) {

    }
    //Action
    function onChangeAction(arg) {      
        var grid = $('#grdQuyen').data("kendoGrid");
        var selectedRow = grid.select();
        var selectedRowIndex = selectedRow.index();
        var data = grid.dataSource.data();
        controller = data[selectedRowIndex].Controller;
        
        lienHeItemGridAction(data[selectedRowIndex].Controller);
    }
    function onDataBoundAction(arg) {
        controller = "";
        refreshGridAction();
    }

    function onDataBindingAction(arg) {

    }
</script>
<script type="text/javascript">
    var idRole;
    $(document).ready(function () {
        //Cập nhật quyền vào hệ thống nhanh
        $("#btnPhanQuyen").click(function () {
            getupdateroles();
        });
        //Hiển thị popup người dùng
        $("#btnAddUser").click(function () {
            showAddUser();
        });
    })
    function getupdateroles() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetController", "Roles")',
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    $("#grdController").data("kendoGrid").dataSource.read();
                    $("#grdController").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }
    // Sửa mô tả quyền
    function showAddMota() {
        $("#BtnUpdateMota").show();

        if (!$("#WindowAddMota").is(":visible")) {
            //resetAllField();
            $("#WindowAddMota").data("kendoWindow").center().open();
        }
    }
    // thêm quyền
    function showAdd() {
        $("#BtnAddNew").show();
        $("#BtnUpdate").hide();

        if (!$("#WindowAddRoleId").is(":visible")) {
            //resetAllField();
            $("#WindowAddRoleId").data("kendoWindow").center().open();
        }
    }
    //sửa quyền
    function showUpdate() {
        $("#BtnAddNew").hide();
        $("#BtnUpdate").show();

        if (!$("#WindowAddRoleId").is(":visible")) {
            $("#WindowAddRoleId").data("kendoWindow").center().open();
        }
    }
    //Lấy detail quyền để sửa mô tả
    function showWindowEditMota(controller, action) {

        $.get('@Url.Action("GetUpdateMotaQuyen", "Roles")', { _controller: controller, _action: action })
            .done(function (data) {

                $("#txtControllers").val(data.Controller);
                $("#txtActions").val(data.Action);
                $("#txtDescription").val(data.Description);

                showAddMota();
       });
    }
    //sửa mô tả
    function UpdateMotaQuyen() {

        var _controllers= $("#txtControllers").val();
        var _actions = $("#txtActions").val();
        var _mota = $("#txtDescription").val();

        var formData = new FormData();
        formData.append("_controllers", _controllers);
        formData.append("_actions", _actions);
        formData.append("_descriptions", _mota);
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateMotaQuyen", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    clearData();
                    $("#WindowAddMota").data("kendoWindow").center().close();
                    $("#grdController").data("kendoGrid").dataSource.read();
                    $("#grdController").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
     }
    //lấy detail để sửa Role
    function updateItemGridRole(Id)
    {
        clearData();
        idRole = Id;
        $.get('@Url.Action("GetUpdateRole", "Roles")', { id: idRole })
            .done(function (data) {
                $("#txtRolesName").val(data.RoleName);
           showUpdate();
       });
    }
    //
    function validate() {
        var _roleName = $("#txtRolesName").val()

        if (_roleName == "") {
            $("#ErrorMessage").text("Quyền không được phép trống.");
            return false;
        }
    }
    //Thêm mới quyền
     function InsertRole() {
        var _rolesName = $("#txtRolesName").val();
        var formData = new FormData();
        formData.append("roleName", _rolesName);

        $.ajax({
            type: "POST",
            url: '@Url.Action("CreateNewRoleId", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    clearData();
                    $("#WindowAddRoleId").data("kendoWindow").center().close();
                    $("#grdRole").data("kendoGrid").dataSource.read();
                    $("#grdRole").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });

    }
    //sửa quyền
    function UpdateRole() {

        var _rolesName = $("#txtRolesName").val();
        var formData = new FormData();
        formData.append("roleName", _rolesName);
        formData.append("id", idRole);
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateRole", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    clearData();
                    $("#WindowAddRoleId").data("kendoWindow").center().close();
                    $("#grdRole").data("kendoGrid").dataSource.read();
                    $("#grdRole").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
     }
    //xóa quyền
    function DeleteRole(Id) {
        idRole = Id;
        var formData = new FormData();
        formData.append("id", idRole);
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteRole", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    $("#WindowAddRoleId").data("kendoWindow").center().close();
                    $("#grdRole").data("kendoGrid").dataSource.read();
                    $("#grdRole").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }
    // Xóa hết dữ liệu khi cập nhật thành công
    function clearData() {
        $('#txtRolesName').val('');
    }
    function removeItemGrid(id) {
        $("#windowConfirm").data("kendoWindow").center().open();
        $("#confirmYes").unbind();
        $('#confirmYes').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
            DeleteRole(id);
        });

        $('#confirmNo').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
        });
    }
    //user

    function lienHeItemGrid(id) {
        detailId = id;       
        refreshGridQuyen();
    }
    function refreshGridQuyen() {
        $("#grdQuyen").data("kendoGrid").dataSource.read();
        $("#grdQuyen").data("kendoGrid").refresh();
    }
    //Action
    function lienHeItemGridAction(id) {
        controller = id;        
        refreshGridAction();
    }
    function refreshGridAction() {
        $("#grdAction").data("kendoGrid").dataSource.read();
        $("#grdAction").data("kendoGrid").refresh();
    }
    function filterActionParams() {
        return {
            _userId: userId,
            _controller: controller
        };
    }
    // Script dung cho ben su kien check and uncheck action
    $('#mastercheckbox').click(function () {

        var data = $("#grdAction").data("kendoGrid").dataSource.data();

        for (var i = 0; i < data.length; i++) {

            var itemId = data[i]["Action"];
            var itemClass = "#checkboxGroups_" + itemId;
           
            if ($(this).is(':checked')) {
                $(itemClass).prop('checked', 'checked').attr('checked', true).change();
            }
            else {
                $(itemClass).removeAttr('checked').change();
            }
        }
    });
    $('#grdAction').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
        var $check = $(this);
        if ($check.is(":checked") == true) {

            $(this).attr('checked', true);

        }
        else {
            $(this).removeAttr('checked');
        }
    });
    //update quyền
    function UpdateQuyenBranch()
    {
        var selectedIds = [];
        var unSelectedIds = [];
        var motaselects = [];
        var grid = $('#grdAction').data("kendoGrid");
        var data = grid.dataSource.data();
        for (var i = 0; i < data.length; i++) {
            var _controller = data[i]["Controller"];
            var _action = data[i]["Action"];
            var _description = data[i]["Mota"];
            var keyID = "#checkboxGroups_" + _action;

            if ($(keyID).is(":checked") == true) {

                selectedIds.push(_action);
                motaselects.push(_description);

            } else {

                unSelectedIds.push(_action);
                motaselects.push(_description);
            }
        }
        //tách item chuỗi bới dấu ,
        var quyenIds = selectedIds.join(",");
        var removelQuyenIds = unSelectedIds.join(",");
        var moTas = motaselects.join(",");

        if ((userId == null) || (userId.length == 0)) {

            showAlertView("Bạn cần chọn quản trị viên để cập nhật", "Đồng ý");
            return;
        }
        showAlertView("Bạn có chắc chắn không?", "Đồng ý", "Hủy", function (btnTag) {

            //___OK->Next
            if (btnTag == 1) {

                var formData = new FormData();
                formData.append("userId", userId);
                formData.append("controller", _controller);
                formData.append("quyenIds", quyenIds);
                formData.append("motas", moTas);
                formData.append("removelQuyenIds", removelQuyenIds);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateQuyen", "Roles")',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.Num > 0) {
                            $("#grdAction").data("kendoGrid").dataSource.read();
                            $("#grdAction").data("kendoGrid").refresh();
                        }
                        showAlertView(data.Message, "Đồng ý");

                    },
                    error: function () {

                        showAlertView("Không thể thêm mới quyền lúc này", "Đồng ý");
                    }
                });
            }

        });

    }
    // check null quyền
    function validate() {
        var _roleName = $("#txtRolesName").val()

        if (_roleName == "") {
            $("#ErrorMessage").text("Quyền không được phép trống.");
            return false;
        }
    }
    //--->Thao tác với người dùng<---
    //Thêm mới quyền
     function InsertUser() {
         var _Name = $("#textName").val();
         var _Email = $("#email").val();
         var _Phone = $("#sodienthoai").val();
         var _UserName = $("#userName").val();
         var _Password = $("#password").val();
         var _Avatar = document.getElementById("tepAnh").files[0];
         var _Quyen = $("#listRoles").val();
         var _Active = $("#ckActive").is(":checked");
         
         var formData = new FormData();
         formData.append("_email", _Email);
         formData.append("_password", _Password);
         formData.append("_phone", _Phone);
         formData.append("_userName", _UserName);
         formData.append("_avatar", _Avatar);
         formData.append("_active", _Active);
         formData.append("_roleId", _Quyen);
         formData.append("_hoten", _Name);

        $.ajax({
            type: "POST",
            url: '@Url.Action("InsertUser", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    clearDataUser();
                    $("#WindowAddUserId").data("kendoWindow").center().close();
                    $("#grdUser").data("kendoGrid").dataSource.read();
                    $("#grdUser").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }
    //sửa người dùng
     function UpdateUser() {
         var _id = $("#userId").val();
        var _Name = $("#textName").val();
        var _Email = $("#email").val();
        var _Phone = $("#sodienthoai").val();
        var _UserName = $("#userName").val();
        var _Password = $("#password").val();
        var _Avatar = document.getElementById("tepAnh").files[0];
        var _Quyen = $("#listRoles").val();
        var _Active = $("#ckActive").is(":checked");

        var formData = new FormData();
        formData.append("_id", _id);
        formData.append("_email", _Email);
        formData.append("_password", _Password);
        formData.append("_phone", _Phone);
        formData.append("_userName", _UserName);
        formData.append("_avatar", _Avatar);
        formData.append("changeImage", changeImage);
        formData.append("_active", _Active);
        formData.append("_roleId", _Quyen);
        formData.append("_hoten", _Name);
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateUser", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    clearDataUser();
                    $("#grdUser").data("kendoGrid").dataSource.read();
                    $("#grdUser").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
     }
    //lấy người người dùng cần sửa
    function updateItemGridUser(Id)
    {
        clearDataUser();
        userId = Id;

        $.get('@Url.Action("GetUpdateUserById", "Roles")', { id: userId })
            .done(function (data) {
                $("#userId").val(data.Id);
                $("#textName").val(data.Hoten);
                $("#email").val(data.Email);
                $("#sodienthoai").val(data.Phone);
                $("#userName").val(data.UserName);
                $("#password").val(data.PasswordHash);
                $("#anhAvatar").attr("src", data.Anh);                
                $("#listRoles").data("kendoComboBox").value(data.RoleName);
                document.getElementById("ckActive").checked = data.Active;
                //console.log(data.Anh);
                showUpdateUser();
       });
    }

    //Xóa người dùng
    function DeleteUser(Id) {
        userId = Id;
        var formData = new FormData();
        formData.append("id", userId);
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteUserById", "Roles")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num == 1) {
                    $("#WindowAddUserId").data("kendoWindow").center().close();
                    $("#grdUser").data("kendoGrid").dataSource.read();
                    $("#grdUser").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }
    //? xóa người dùng
    function removeItemGridUser(Id) {
        $("#windowConfirm").data("kendoWindow").center().open();
        $("#confirmYes").unbind();
        $('#confirmYes').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
            DeleteUser(id);
        });

        $('#confirmNo').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
        });
    }
    //Xóa text dành cho người dùng
    function clearDataUser() {
        $('#textName').val('');
        $("#textName").val('');
        $("#email").val('');
        $("#sodienthoai").val('');
        $("#userName").val('');
        $("#password").val('');
        $("#files").val('');        
        $('#ckActive').attr('checked', false);
        $("#listRoles").data("kendoComboBox").select(-1);

        $("#anhAvatar").attr("src", "/Areas/AdminLinja/Content/images/NoImage.jpg");
    }
     // Sửa mô tả quyền
    function showAddMota() {
        $("#BtnUpdateMota").show();

        if (!$("#WindowAddMota").is(":visible")) {
            //resetAllField();
            $("#WindowAddMota").data("kendoWindow").center().open();
        }
    }
    // Hiển thị popup người dùng
    function showAddUser() {
        $("#BtnAddNewUser").show();
        $("#BtnUpdateUser").hide();

        if (!$("#WindowAddUserId").is(":visible")) {
            $("#WindowAddUserId").data("kendoWindow").center().open();
        }
    }
    //sửa quyền
    function showUpdateUser() {
        $("#BtnAddNewUser").hide();
        $("#BtnUpdateUser").show();

        if (!$("#WindowAddUserId").is(":visible")) {
            $("#WindowAddUserId").data("kendoWindow").center().open();
        }
    }
 
    //--Combobox
    function Roles_Select() {
        var filter = $("#listRoles").data("kendoComboBox").value();
        if (filter) {
            alert('Thông báo' + filter);

        }

    }
    //--Thêm ảnh
    var changeImage = false;
 
    $(function () {
        // image
        $('#themAnh').click(function (e) {
            $('#tepAnh').click();
        });

        $('#tepAnh').bind('change', function (e) {
            var fileReader = new FileReader();
            fileReader.readAsDataURL(this.files[0]);
            fileReader.onload = function (e) {
                $("#anhAvatar").attr("src", this.result);
                changeImage = true;
            };
        });

        $('#xoaAnh').click(function (e) {
            $("#anhAvatar").attr("src", "/Areas/AdminLinja/Content/images/NoImage.jpg");
            $('#tepAnh').val('');
            changeImage = true;
        });
    })
</script>

@* Thông báo *@
@Html.Partial("_Arlert")