@using LinJas.Areas.AdminLinja.Models.AuthModel
@{
    ViewBag.Title = "Danh mục";
    Layout = "~/Areas/AdminLinja/Views/Shared/_Layouts.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <h2 class="text-title">Cập nhật danh mục sản phẩm</h2>
        </div>
        <div class="col-md-2">
            <div class="tabtinh">
                <label>Tỉnh/TP: </label>
                @(Html.Kendo().ComboBox()
                .Name("list-tinh")
                .HtmlAttributes(new { style = "width:175px" })
                .Filter(FilterType.Contains)
                .Placeholder("--- Chọn Tỉnh ---")
                .DataTextField("Name")
                .DataValueField("Id")
                .Events(e => e
                .Change("Tinh_Select"))
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetTinh", "Common");
                    });

                })
                )
            </div>
        </div>
        <div class="col-md-6">
            <div class="tabtinh">
                <label>Danh mục: </label>

                @(Html.Kendo().ComboBox()
              .Name("list-danhmuc")
              .HtmlAttributes(new { style = "width:280px;" })
              .Placeholder("--- Chọn danh mục ---")
              .DataTextField("Ten")
              .DataValueField("Id")
              .Filter(FilterType.Contains)
              .Events(e => e
              .Change("Danhmuc_Select"))
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetDataDanhMuc", "Common").Data("filterDanhMuc");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(true)
              .CascadeFrom("list-tinh")
                )
            </div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div id="clientsDb">
                @(Html.Kendo().Grid<DanhMuc>()
          .Name("grdDanhMuc")
          .Columns(columns =>
          {
              columns.Bound(c => c.Id).Sortable(false).Title("Id");
              columns.Bound(c => c.Ma).Sortable(false).Title("Mã");
              columns.Bound(c => c.Ten).Sortable(false).Title("Tên Danh mục");              
              columns.Bound(c => c.SapSep).Sortable(false).Title("Vị trí");
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='showWindowEditDanhMuc(\"#=Id#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='removeItemGridLHDL(\"#=Id#\")' ><span class='glyphicon glyphicon-trash'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
          })
          .ToolBar(toolbar =>
          {
              toolbar.Template(
                @<text>
                    <div class="toolbar">
                        <table style="width:100%">
                            <tr>
                                <td width="25%" align="left">
                                    <button type="button" id="btnDanhMuc" class="k-button"><span class="k-icon k-i-plus"></span>Thêm Danh Mục</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                </text>);
          })
        .Pageable()
        .Sortable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("LoadDataDanhMuc", "Common").Data("filterDanhMucIdParams")))
                )
            </div>
        </div>
    </div>
</div>

<!--popup quận huyện-->
<div id="window-Add">
    @(Html.Kendo().Window().Name("WindowAddDanhMuc")
                .Title("Quản lý quận huyện")
                .Draggable()
                .Width(500)
                .Visible(false)
                .Modal(true)
                .Actions(actions => actions.Close())
                .Content(
    @<text>
        <div><span id="ErrorMessage"></span></div>
        <div>
            <table style="width: 100%;" border="0">
                <tr>
                    <td>
                        <label>Tỉnh/TP: </label><br />
                        @(Html.Kendo().ComboBox()
                            .Name("cbtinh")
                            .HtmlAttributes(new { style = "width:100%;" })
                            .Filter(FilterType.Contains)
                            .Placeholder("--- Chọn Tỉnh ---")
                            .DataTextField("Name")
                            .DataValueField("Id")                            
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetTinh", "Common");
                                });
                            })
                        )
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Danh mục: </label><br />

                        @(Html.Kendo().ComboBox()
                          .Name("cbdanhmuc")
                          .HtmlAttributes(new { style = "width:100%;" })
                          .Placeholder("--- Chọn danh mục ---")
                          .DataTextField("Ten")
                          .DataValueField("Id")
                          .Filter(FilterType.Contains)
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetDataDanhMuc", "Common").Data("filterDanhMuc");
                              })
                              .ServerFiltering(true);
                          })
                          .Enable(false)
                          .AutoBind(false)
                          .CascadeFrom("list-tinh")
                        )
                    </td>

                </tr>
                <tr>                    
                    <td>
                        <label>Tên danh mục: </label>
                        <input type="text" id="txtDanhMuc" class='k-textbox' placeholder="Nhập tên danh mục..." />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>Sắp xếp danh mục: </label>
                        <input type="text" id="txtSapXep" class='k-textbox' placeholder="Nhập vị trí..." />
                    </td>
                </tr>
                <tr>
                    <td>
                        <hr />
                        <button type="button" id="BtnAddNew" class="k-button" onclick="AddNewQuanHuyen()"><span class="k-icon k-edit"></span> Thêm mới</button>
                        <button type="button" id="BtnUpdate" class="k-button" onclick="UpdateQuanHuyen()"><span class="k-icon k-edit"></span> Cập nhật</button>
                    </td>
                </tr>
            </table>
        </div>
    </text>
    )
    )
</div>

<script>
    var idcha;
    $(document).ready(function () {
        $("#btnDanhMuc").click(function () {
            showAdd();
        });
    });
    // thêm quận huyện
    function showAdd() {
        $("#BtnAddNew").show();
        $("#BtnUpdate").hide();

        if (!$("#WindowAddDanhMuc").is(":visible")) {
            //resetAllField();
            $("#WindowAddDanhMuc").data("kendoWindow").center().open();
        }
    }
    //sửa quận huyện
    function showUpdate() {
        $("#BtnAddNew").hide();
        $("#BtnUpdate").show();

        if (!$("#WindowAddDanhMuc").is(":visible")) {
            $("#WindowAddDanhMuc").data("kendoWindow").center().open();
        }
    }
    //chọn danh mục
    function Tinh_Select() {
        var filter = $("#list-tinh").data("kendoComboBox").value();
        if (filter) {
            $("#grdDanhMuc").data("kendoGrid").dataSource.read();
            $("#grdDanhMuc").data("kendoGrid").refresh();
        }
    }
    function Danhmuc_Select(){
        var filter = $("#list-danhmuc").data("kendoComboBox").value();
        if (filter) {
            $("#grdDanhMuc").data("kendoGrid").dataSource.read();
            $("#grdDanhMuc").data("kendoGrid").refresh();
        }
    }
    //lọc quận huyện theo tỉnh
    function filterDanhMucIdParams() {
        var _tinhId = $("#list-tinh").data("kendoComboBox").value();
        var _danhmucId = $("#list-danhmuc").data("kendoComboBox").value();
        if (_tinhId == null || _tinhId == '') _tinhId = 0;
        if (_danhmucId == null || _danhmucId == '') _danhmucId = 0;
        return {
            tinhId: _tinhId,
            danhmucId:_danhmucId
        };
    }
  
    //CHỌN DANH MỤC THEO TỈNH
    function filterDanhMuc() {
        var _tinhId = $("#list-tinh").data("kendoComboBox").value();
        return {
            tinhId: _tinhId          
        };
    }
  
   
    // Thêm mới quận huyện

    function AddNewQuanHuyen() {

        if (validate()) {
            var danhmucId = $("#cbdanhmuc").data("kendoComboBox").value();
            var tenQuan = $("#txtDanhMuc").val();
            var sapXep = $("#txtSapXep").val();
            var _tinhId = $("#cbtinh").data("kendoComboBox").value();
            if (_tinhId == null || _tinhId == '') _tinhId = 0;

            var formData = new FormData();
            formData.append("parentId", danhmucId);
            formData.append("name", tenQuan);
            formData.append("sapXep", sapXep);
            formData.append("tinhId", _tinhId);

            $.ajax({
                type: "POST",
                url: '@Url.Action("Insert", "DanhMuc")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.Num > 0) {

                        $("#WindowAddDanhMuc").data("kendoWindow").center().close();
                        $("#grdDanhMuc").data("kendoGrid").dataSource.read();
                        $("#grdDanhMuc").data("kendoGrid").refresh();
                        showAlertView(data.Message, "Đồng ý", "");
                    } else {
                        showErrorInPopup(data.Message);
                    }

                },
                error: function () {

                    showErrorInPopup("Lỗi không thể kết nối đến máy chủ.");
                }
            });
        }
    }
    //---Cập nhật quận quyện
    function showWindowEditDanhMuc(Id) {

        idcha = Id;
        clearData();
        $.get('@Url.Action("GetDanhMucById", "Common")', { danhmucId: Id })
            .done(function (data) {
            $("#cbtinh").data("kendoComboBox").value(data.TinhId);
            $("#cbdanhmuc").data("kendoComboBox").value(data.ParentId);
            $("#txtDanhMuc").val(data.Ten);
            $("#txtSapXep").val(data.SapSep);

            showUpdate();
       });
    }
    //Sửa quận huyện
    function UpdateQuanHuyen() {

        if (validate()) {

            var danhmucId = $("#cbdanhmuc").data("kendoComboBox").value();
            var tenQuan = $("#txtDanhMuc").val();
            var sapXep = $("#txtSapXep").val();
            var _tinhId = $("#cbtinh").data("kendoComboBox").value();
            if (_tinhId == null || _tinhId == '') _tinhId = 0;

            var formData = new FormData();
            formData.append("id", idcha);
            formData.append("parentId", danhmucId);
            formData.append("name", tenQuan);
            formData.append("sapXep", sapXep);
            formData.append("tinhId", _tinhId);

            $.ajax({
                type: "POST",
                url: '@Url.Action("Update", "DanhMuc")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.Num > 0) {
                        clearData();
                        $("#WindowAddDanhMuc").data("kendoWindow").center().close();
                        $("#grdDanhMuc").data("kendoGrid").dataSource.read();
                        $("#grdDanhMuc").data("kendoGrid").refresh();
                        showAlertView(data.Message, "Đồng ý", "");
                    } else {
                        showErrorInPopup(data.Message);
                    }
                },
                error: function () {

                    showErrorInPopup("Lỗi không thể kết nối đến máy chủ.");
                }
            });
        }
    }

    // Check dữ liệu trước khi insert
    function validate() {
        showErrorInPopup("");

        var ten = $("#txtDanhMuc").val();

        if (ten.length == 0) {
            showErrorInPopup("Tên quận huyện là yêu cầu bắt buộc.");
            return false;
        }

        return true;
    }
     //---Xóa quận huyện
    function removeItemGridLHDL(Id) {
        showAlertView("Bạn có chắc chắn ?", "Đồng ý", "Hủy", function (btnTag) {

            //__OKE
            if (btnTag == 1) {

                var formData = new FormData();
                formData.append("danhmucId", Id);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Delete", "DanhMuc")',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.Num > 0) {

                            $("#grdDanhMuc").data("kendoGrid").dataSource.read();
                            $("#grdDanhMuc").data("kendoGrid").refresh();

                        }
                        showAlertView(data.Message, "Đồng ý", "");

                    },
                    error: function () {
                        showAlertView("Lỗi không thể kết nối đến máy chủ", "Đồng ý", "");
                    }
                });

            }
        })
    }
    // Xóa hết dữ liệu khi cập nhật thành công
    function clearData() {
        showErrorInPopup("");
        $("#cbdanhmuc").data("kendoComboBox").value(-1);
        $("#cbtinh").data("kendoComboBox").value(-1)
        $("#txtDanhMuc").val('');
        $("#txtSapXep").val('');
    }
</script>

