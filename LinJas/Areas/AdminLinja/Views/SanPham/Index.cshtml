@using LinJas.Areas.AdminLinja.Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/AdminLinja/Views/Shared/_Layouts.cshtml";
}


<div class="container-fluid" id="product">
    <div class="row well">
        <div class="col-md-8">
            <div class="panel panel-default">
                <div class="panel-heading">Nội dung sản phẩm:</div>
                <div class="panel-body">
                    <div class="label-info"><span id ="ErrorMessage"></span></div>                   
                    <label>Tên sản phẩm:</label>@Html.Hidden("Id")
                    <textarea rows="1" id="txtName" class="form-control" placeholder="Tên sản phẩm..."></textarea>
                    <label>Nội dung:</label>
                    <textarea rows="10" id="txtContent" class="form-control" placeholder="Nội dung chi tiết..."></textarea>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">Phần dành cho SEO:</div>
                <div class="panel-body" id="spseo">
                    <label>Tiêu đề:</label>
                    <p id="text-messemgerfoTieuDeSeo">Kí tự tiêu đề: <span></span> /65 kí tự</p>
                    <textarea rows="2" id="txtTieuDeSeo" class="form-control" placeholder="Tiêu đề seo..." onkeyup="countChar(this,1)"></textarea>
                    <label>Mô tả:</label>
                    <p id="text-messemgerfoMotaSeo">Kí tự mô tả: <span></span> /170 kí tự</p>
                    <textarea rows="4" id="txtMotaSeo" class="form-control" placeholder="Mô tả seo..." onkeyup="countChar(this,2)"></textarea>
                    <label>Từ khóa:</label>
                    <p id="text-messemgerfoTukhoaSeo">Kí tự từ khóa: <span></span> /170 kí tự</p>
                    <textarea rows="2" id="txtTukhoaSeo" class="form-control" placeholder="Từ khóa seo..." onkeyup="countChar(this,3)"></textarea>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">Nhập từ khóa tìm kiếm trên hệ thống:(vd: sản phẩm a, sản phẩm,...)</div>
                <div class="panel-body">
                    <label>Từ khóa tìm  kiếm:</label>
                    <textarea rows="2" id="txtTukhoaTimKiem" class="form-control" placeholder="Từ khóa tìm kiếm..."></textarea>
                </div>
            </div>      
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">Thông tin sản phẩm</div>
                <div class="panel-body">
                    <label>Danh mục:</label>
                    @(Html.Kendo().ComboBox()
                  .Name("cbDanhMuc")
                  .Filter("contains")
                  .Placeholder("Chọn danh mục sản phẩm...")
                  .DataTextField("Ten")
                  .DataValueField("Id")
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetDanhMucSanPham", "Common");
                      }).ServerFiltering(true);
                  })
                  .SelectedIndex(-1)
                  .Suggest(true)
                  .HtmlAttributes(new { style = "width:100%;" })
                    )
                    <label>Trạng thái:</label>
                    @(Html.Kendo().ComboBox()
                  .Name("cbTrangThai")
                  .Filter("contains")
                  .Placeholder("Chọn trạng thái...")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(new List<SelectListItem>() {
                      new SelectListItem() {
                        Text = "Hàng mới về", Value = "1"
                      },
                      new SelectListItem() {
                        Text = "Bán chạy", Value = "2"
                      },
                      new SelectListItem() {
                        Text = "Hết hàng", Value = "3"
                      },
                      new SelectListItem() {
                        Text = "Hàng đang về", Value = "4"
                      }
                  })
                  .SelectedIndex(-1)
                  .Suggest(true)
                  .HtmlAttributes(new { style = "width:100%;" })
                    )
                    <label>Giá cũ:</label>
                    <input type="number" id="txtGiaCu" placeholder="Giá cũ..." class="form-control"/>
                    <label>Giá mới:</label>
                    <input type="number" id="txtGiaMoi" placeholder="Giá mới..." class="form-control"/>
                    <label>Giảm giá:</label>
                    <input type="number" id="txtChietKhau" placeholder="Chiết khấu (vd: 10->'10%')..." class="form-control"/>
                    <label>Ngày bắt đầu:</label>
                    @(Html.Kendo().DateTimePicker()
                    .Name("dateNgaybatdau")
                    .Value(DateTime.Now)
                    .HtmlAttributes(new { style = "width: 100%", title = "Ngày bắt đầu" })                    
                    )
                   
                    <label>Ngày kết thúc:</label>                    
                    @(Html.Kendo().DateTimePicker()
                    .Name("dateNgayketthuc")
                    .Value(DateTime.Now)
                    .HtmlAttributes(new { style = "width: 100%", title = "Ngày kết thúc" })
                    )

                    <label>Sản phẩm khuyến mại:</label>
                    @(Html.Kendo().ComboBox()
                  .Name("cbKhuyenMaiId")
                  .Filter("contains")
                  .Placeholder("Chọn khuyến mại...")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(new List<SelectListItem>() {
                      new SelectListItem() {
                        Text = "Khuyến mại hot", Value = "1"
                      },
                      new SelectListItem() {
                        Text = "Chưa có khuyến mại", Value = "2"
                      }
                  })
                  .SelectedIndex(1)
                  .Suggest(true)
                  .HtmlAttributes(new { style = "width:100%;" })
                    )
                    <label>Sắp Xếp:</label>
                    <input type="number" id="txtSapxep" placeholder="Vị trí sản phẩm..." class="form-control" />
                    <br />                    
                    <label><span class="text-active">Kích hoạt: </span><input type="checkbox" id="txtActive" /></label>
                    <br />
                    <label>Ảnh đại diện:</label>
                    <div class="demo-section k-content">
                        <div style="position: relative;margin-top:5px;margin-bottom:10px; width:100px;">
                            <img id="anhAvatar" src="~/Areas/AdminLinja/Content/images/NoImage.jpg" class="img-thumbnail img-responsive">
                            <div style="position: absolute; bottom: 0; right: 0; margin: 0 5px 2px 0">
                                <button id="xoaAnh" type="button" class="glyphicon glyphicon-remove"></button>
                                <button id="themAnh" type="button" class="glyphicon glyphicon-file"></button>
                                <input id="tepAnh" type="file" style="display:none;" />
                            </div>
                        </div>
                    </div><!--end img-->
                   <div class="form-save">
                       <button type="button" id="saveButton" class="k-button k-button-icontext" onclick="insertSanPham()"><span class="k-icon k-i-plus"></span> Thêm mới</button>
                       <button type="button" id="editButton" class="k-button k-button-icontext" onclick="updatesanpham()"><span class="k-icon k-edit"></span> Sửa</button>
                   </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">Ảnh dành cho slide</div>
                <div class="panel-body">
                    @(Html.Kendo().Grid<SanPhamModel>()
                        .Name("gridanhslide")
                        .Columns(columns =>
                        {
                            columns.Bound(c => c.ArticleId).Title("Ảnh")
                            .ClientTemplate(
                                @"<div class='customer-photo'
                                    style='background-image: url(" + @Url.Content("~/Areas/AdminLinja/Content/images/NoImage.jpg") + ");'></div><div class='customer-name'>#: Name #</div>")
                            .Width(240);
                            columns.Bound(c => c.Name);
                            columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='showWindowEditDanhMuc(\"#=Id#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
                            columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='removeItemGridLHDL(\"#=Id#\")' ><span class='glyphicon glyphicon-trash'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
                        })
                        .ToolBar(toolbar =>
                        {
                            toolbar.Template(
                            @<text>
                                <div class="toolbar">
                                    <table style="width:100%">
                                        <tr>
                                            <td width="25%" align="left">
                                                <a href="@Url.Action("Create","SanPham",new{Area="AdminLinja"})" target="_blank" id="btnSanPham" class="k-button"><span class="k-icon k-i-plus"></span>Thêm Ảnh</a>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </text>);
                        })                        
                        .Pageable()
                        .Sortable()
                        .Selectable(select => select
                        .Mode(GridSelectionMode.Single)
                        .Type(GridSelectionType.Row))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(10)
                        .Read(read => read.Action("LoadDataSanPham", "Common")))/*.Data("filterSanPhamParams")*/
                    )
                    <hr />
                </div>
            </div>
        </div>
    </div>
</div>

<!--Danh sách sản phẩm-->
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="well">
                <div class="panel panel-default">
                    <div class="panel-heading text-center"><h2 class="text-title">Danh sách sản phẩm</h2></div>
                    <div class="panel-body" id="clientsDb">
                        @(Html.Kendo().Grid<SanPhamModel>()
          .Name("grdSanPham")
          .Columns(columns =>
          {
              columns.Bound(c => c.ArticleId).Sortable(false).Title("Id");
              columns.Bound(c => c.UrlAnh).Title("Ảnh đại diện").Width(50).ClientTemplate("<img src='" + @Url.Content("#=UrlAnh#") + "' height='30px' width='30px'/>");
              columns.Bound(c => c.Ten).Sortable(false).Title("Danh mục");
              columns.Bound(c => c.Name).Sortable(false).Title("Tên sản phẩm");
              columns.Bound(c => c.NgayBatDau).Sortable(false).Title("Ngày bắt đầu");
              columns.Bound(c => c.NgayKetThuc).Sortable(false).Title("Ngày kết thúc");
              columns.Bound(c => c.TrangThai).Sortable(false).Title("Trạng thái");
              columns.Bound(c => c.Gia).Sortable(false).Title("Giá mới").ClientTemplate("<div class=\"toCurrency\">#=Gia#</div>");
              columns.Bound(c => c.Activeted).Sortable(false).Title("Kích hoạt").ClientTemplate("<div style=\"text-align:center;\">#=Activeted#</div>").Width(30);
              columns.Bound(c => c.NgayTao).Sortable(false).Title("Ngày Tạo");
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='showeditSanPham(\"#=Id#\")' ><span class='glyphicon glyphicon-pencil'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
              columns.Bound(c => c.Id).Sortable(false).Title("").ClientTemplate("<a onclick='removeItemGrid(\"#=Id#\")' ><span class='glyphicon glyphicon-trash'></span></a>").HtmlAttributes(new { style = "text-align:center;width:30px;" });
          })
          .ToolBar(toolbar =>
          {
          toolbar.Template(
            @<text>
                <div class="toolbar">
                    <table style="width:100%">
                        <tr>
                            <td width="25%" align="left">
                                <a onclick="cleardatasanpham();" id="btnSanPham" class="k-button"><span class="k-icon k-i-plus"></span>Thêm Sản Phẩm</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </text>);
          })
        .Pageable()
        .Sortable()
        .Selectable(select => select
        .Mode(GridSelectionMode.Single)
        .Type(GridSelectionType.Row))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("LoadDataSanPham", "Common")))/*.Data("filterSanPhamParams")*/
                        )
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<!--js-->
<script>
    var idProduct;
    var changeImage = false;
    $(document).ready(function () {
        $("#product").hide();
    })
  //--- Check kí tự SEO
    function countChar(val,e) {
        var len = val.value.length;
        switch (e){
            case 1:
                if (len >= 65) {
                    val.value = val.value.substring(0, 65);
                } else {
                    $('#text-messemgerfoTieuDeSeo span').text(65 - len);
                }
                break;
            case 2:
                if (len >= 170) {
                    val.value = val.value.substring(0, 170);
                } else {
                    $('#text-messemgerfoMotaSeo span').text(170 - len);
                }
                break;
            case 3:
                if (len >= 170) {
                    val.value = val.value.substring(0, 170);
                } else {
                    $('#text-messemgerfoTukhoaSeo span').text(170 - len);
                }
                break;
        }
    };
    //
    function cleardatasanpham() {
        $("#Id").val('');
        $("#txtName").val('');
        $("#txtContent").data("kendoEditor").value('');
        $("#txtTieuDeSeo").val('');
        $("#txtMotaSeo").val('');
        $("#txtTukhoaSeo").val('');
        $("#txtTukhoaTimKiem").val('');
        $("#cbDanhMuc").data("kendoComboBox").select(0);
        $("#cbTrangThai").data("kendoComboBox").select(0);
        $("#txtGiaCu").val('');
        $("#txtGiaMoi").val('');
        $("#txtChietKhau").val('');
        $("#dateNgaybatdau").val('');
        $("#dateNgayketthuc").val('');
        $("#cbKhuyenMaiId").data("kendoComboBox").select(1);
        $('#txtActive').prop('checked', false);
        $("#txtSapxep").val('');
        $("#anhAvatar").attr("src", "/Areas/AdminLinja/Content/images/NoImage.jpg");
        $("#txtName").focus();
        showAdd();
    }
    function validatesanpham() {
        var txtTieuDe = $("#txtName").val();
        var txtNoiDung = $("#txtContent").data("kendoEditor").value();
        var txtMotaSeo = $("#txtMotaSeo").val();
        var txttieudeseo = $("#txtTieuDeSeo").val();
        var txtTukhoaSeo= $("#txtTukhoaSeo").val();
        var cbDanhMuc= $("#cbDanhMuc").data("kendoComboBox").value();
        var cbTrangThai = $("#cbTrangThai").data("kendoComboBox").value();
        var txtGiaMoi= $("#txtGiaMoi").val();

        showErrorInPopup('');

        if (txtTieuDe.length == 0) {

            showErrorInPopup('Tên sản phẩm là bắt buộc.');
            return false;
        }
        if (txtNoiDung.length == 0) {
            showErrorInPopup('Nội dung là bắt buộc.');
            return false;
        }
        if (txtMotaSeo.length == 0) {
            showErrorInPopup('Mô tả là bắt buộc.');
            return false;
        }
        if (txttieudeseo.length == 0) {
            showErrorInPopup('Tiêu đề là bắt buộc.');
            return false;
        }
        if (txtTukhoaSeo.length == 0) {
            showErrorInPopup('Từ khóa SEO là bắt buộc');
            return false;
        }
        if (cbDanhMuc.length == 0) {
            showErrorInPopup('Danh mục sản phẩm là bắt buộc.');
            return false;
        }
        if (cbTrangThai.length == 0) {
            showErrorInPopup('Trạng thái sản phẩm là bắt buộc.');
            return false;
        }
        if (txtGiaMoi.length == 0) {
            showErrorInPopup('Giá là bắt buộc.');
            return false;
        }
        ///check seo

        if (txttieudeseo.length > 65) {
            showErrorInPopup('Tiêu đề ở mục SEO SETTING không được lớn hơn 65 ký tự.');
            return false;
        }
        if (txtMotaSeo.length > 170) {
            showErrorInPopup('Mô tả ở mục SEO SETTING không được lớn hơn 160 ký tự.');
            return false;
        }
        if (txtTukhoaSeo.length > 170) {
            showErrorInPopup('Từ khóa ở mục SEO SETTING không được lớn hơn 160 ký tự.');
            return false;
        }

        return true;
    }

    function insertSanPham() {
        if (!validatesanpham()) {
            return;
        }
        var file = document.getElementById("tepAnh").files[0];

        var formData = new FormData();

        formData.append("tenSanPham", $("#txtName").val());
        formData.append("noiDung", $("#txtContent").data("kendoEditor").value());
        formData.append("danhMuc", $("#cbDanhMuc").data("kendoComboBox").value());
        formData.append("trangThai", $("#cbTrangThai").data("kendoComboBox").value());
        formData.append("mediaFile", file);
        formData.append("giaCu", $("#txtGiaCu").val());
        formData.append("giaMoi", $("#txtGiaMoi").val());
        formData.append("chietKhau", $("#txtChietKhau").val());
        formData.append("tuNgay", $("#dateNgaybatdau").val());
        formData.append("denNgay", $("#dateNgayketthuc").val());
        formData.append("khuyenMaiId", $("#cbKhuyenMaiId").data("kendoComboBox").value());
        formData.append("active", $("#txtActive").is(":checked"));
        formData.append("sapXep", $("#txtSapxep").val());

        //--- Các trường dữ liệu dùng cho SEO
        formData.append("title", $("#txtTieuDeSeo").val());
        formData.append("description", $("#txtMotaSeo").val());
        formData.append("keyword", $("#txtTukhoaSeo").val());

        //----từ khóa tìm kiếm
        formData.append("tuKhoa", $("#txtTukhoaTimKiem").val());


        $.ajax({
            type: "POST",
            url: '@Url.Action("Create", "SanPham")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                //log(data.Num + '' + data.Message);
                if (data.Num == 1) {
                    cleardatasanpham();
                    $("#grdSanPham").data("kendoGrid").dataSource.read();
                    $("#grdSanPham").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }

    function showeditSanPham(id) {

         idProduct = id;
         $.get('@Url.Action("GetUpdateSanPhamById", "Common")', { _id: idProduct })
            .done(function (data) {
                $("#txtName").val(data.Name);
                $("#txtContent").data("kendoEditor").value(data.NoiDung);
                $("#txtTieuDeSeo").val(data.TieuDe);
                $("#txtMotaSeo").val(data.MoTa);
                $("#txtTukhoaSeo").val(data.TuKhoa);
                $("#txtTukhoaTimKiem").val(data.TuKhoaTimKiem);
                $("#cbDanhMuc").data("kendoComboBox").value(data.DanhMucId);
                $("#cbTrangThai").data("kendoComboBox").value(data.TrangThai);
                $("#txtGiaCu").val(data.GiaCu);
                $("#txtGiaMoi").val(data.GiaMoi);
                $("#txtChietKhau").val(data.ChietKhau);
                $("#dateNgaybatdau").val(data.NgayBatDau);
                $("#dateNgayketthuc").val(data.NgayKetThuc);
                $("#cbKhuyenMaiId").data("kendoComboBox").value(data.KhuyenMaiId);
                document.getElementById('txtActive').checked = data.Active;
                $("#txtSapxep").val(data.SapSep);
                $("#anhAvatar").attr("src", data.UrlAnh);

                showEdit();
       });
    }
    function updatesanpham() {
         if (!validatesanpham()) {
             return;
         }
        var file = document.getElementById("tepAnh").files[0];
        
        var formData = new FormData();
        formData.append("id", idProduct);
        formData.append("tenSanPham", $("#txtName").val());
        formData.append("noiDung", $("#txtContent").data("kendoEditor").value());
        formData.append("danhMuc", $("#cbDanhMuc").data("kendoComboBox").value());
        formData.append("trangThai", $("#cbTrangThai").data("kendoComboBox").value());
        formData.append("mediaFile", file);
        formData.append("changeImage", changeImage);
        formData.append("giaCu", $("#txtGiaCu").val());
        formData.append("giaMoi", $("#txtGiaMoi").val());
        formData.append("chietKhau", $("#txtChietKhau").val());
        formData.append("tuNgay", $("#dateNgaybatdau").val());
        formData.append("denNgay", $("#dateNgayketthuc").val());
        formData.append("khuyenMaiId", $("#cbKhuyenMaiId").data("kendoComboBox").value());
        formData.append("active", $("#txtActive").is(":checked"));
        formData.append("sapXep", $("#txtSapxep").val());

        //--- Các trường dữ liệu dùng cho SEO
        formData.append("title", $("#txtTieuDeSeo").val());
        formData.append("description", $("#txtMotaSeo").val());
        formData.append("keyword", $("#txtTukhoaSeo").val());

        //----từ khóa tìm kiếm
        formData.append("tuKhoa", $("#txtTukhoaTimKiem").val());

        $.ajax({
            type: "POST",
            url: '@Url.Action("Update", "SanPham")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Num === 1) {
                    cleardatasanpham();                    
                    $("#grdSanPham").data("kendoGrid").dataSource.read();
                    $("#grdSanPham").data("kendoGrid").refresh();
                }

                if (data.Num === -2) {
                    removeText();
                    win.close();
                }

                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    }
    //Xóa sản phẩm
    function removeItemGrid(id) {
        $("#windowConfirm").data("kendoWindow").center().open();
        $("#confirmYes").unbind();
        $('#confirmYes').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
            deleteInfo(id);
        });

        $('#confirmNo').click(function () {
            $("#windowConfirm").data("kendoWindow").close();
        });
    }
     function deleteInfo(detailId) {

        var formData = new FormData();
        formData.append("id", detailId);
        $.ajax({
            type: "POST",
            url: '@Url.Action("Delete", "SanPham")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {

                if (data.Num == 1) {
                    cleardatasanpham();
                    $("#grdSanPham").data("kendoGrid").dataSource.read();
                    $("#grdSanPham").data("kendoGrid").refresh();
                }
                showAlertView(data.Message, "Đồng ý");
            },
            error: function () {
                showAlertView("Lỗi không thể kết nối đến máy chủ.", "Đồng ý");
            }
        });
    };
    // Hiển thị nút add
    function showAdd() {
        $("#saveButton").show();
        $("#editButton").hide();
        $("#product").show();
        $("#txtName").focus();
    }
    //hiển thị nút update
    function showEdit() {
        $("#product").show();
        $("#saveButton").hide();
        $("#editButton").show();
    }



    //phần này dành cho Image
    var urlHost = "@Url.Content("~/Content/uploads/articles/")";
    $("#txtContent").kendoEditor(
                {
                    imageBrowser: {
                        transport: {
                            read: "@Url.Action("Read", "ImageBrowser")",
                        destroy: {
                            url: "@Url.Action("Destroy", "ImageBrowser")",
                        type: "POST"
                    },
                    create: {
                        url: "@Url.Action("Create", "ImageBrowser")",
                    type: "POST"
                },
    thumbnailUrl: "@Url.Action("Thumbnail", "ImageBrowser")",
    uploadUrl: "@Url.Action("Upload", "ImageBrowser")",
    imageUrl: function (options) {
        return urlHost + options;
    }

    }

    },
    tools: [
        "bold",
        "italic",
        "underline",
        "strikethrough",
        "justifyLeft",
        "justifyCenter",
        "justifyRight",
        "justifyFull",
        "insertUnorderedList",
        "insertOrderedList",
        "indent",
        "outdent",
        "createLink",
        "unlink",
        "insertImage",
        "insertFile",
        "subscript",
        "superscript",
        "createTable",
        "addRowAbove",
        "addRowBelow",
        "addColumnLeft",
        "addColumnRight",
        "deleteRow",
        "deleteColumn",
        "viewHtml",
        "formatting",
        "cleanFormatting",
        "fontName",
        "fontSize",
        "foreColor",
        "backColor"
    ]
    }
    );
    //_Hiển thị thông báo lỗi ngay trên popup.
    function showErrorInPopup(message) {
        $("#ErrorMessage").show();
        document.getElementById("ErrorMessage").innerHTML = message;
    }
    //--Thêm ảnh avatar sp  

    $(function () {
        // image
        $('#themAnh').click(function (e) {
            $('#tepAnh').click();
        });

        $('#tepAnh').bind('change', function (e) {
            var fileReader = new FileReader();
            fileReader.readAsDataURL(this.files[0]);
            fileReader.onload = function (e) {
                $("#anhAvatar").attr("src", this.result);
                changeImage = true;
            };
        });

        $('#xoaAnh').click(function (e) {
            $("#anhAvatar").attr("src", "/Areas/AdminLinja/Content/images/NoImage.jpg");
            $('#tepAnh').val('');
            changeImage = true;
        });
    })

</script>
@* Thông báo *@
@Html.Partial("_Arlert")


